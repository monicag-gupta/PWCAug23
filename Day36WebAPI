We can implement JSON Serialization/Deserialization in the following three ways:

Using JavaScriptSerializer class
Using DataContractJsonSerializer class
Using JSON.NET library 




Emp.cs under Models folder:


using System.Runtime.Serialization;

namespace Day36WebAPI.Models
{
    [DataContract]
    public class Emp
    {
        [DataMember]
        public string Name { get; set; }

        [DataMember]
        public string Description { get; set; }
    }

}






using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using System.IO;
using Day36WebAPI.Models;
using System.Runtime.Serialization.Json;

namespace Day36WebAPI.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class EmpController : ControllerBase
    {

        [HttpGet]
        public ActionResult<string> Get()
        {
            Emp empObj = new Emp()
            {
                Name = "Jay",
                Description = "IT"
            };

            DataContractJsonSerializer js = new DataContractJsonSerializer(typeof(Emp));
            MemoryStream msObj = new MemoryStream();
            js.WriteObject(msObj, empObj);
            msObj.Position = 0;
            StreamReader sr = new StreamReader(msObj);

            // "{\"Description\":\"IT\",\"Name\":\"Jay\"}"
            string json = sr.ReadToEnd();

            sr.Close();
            msObj.Close();
            return json;
        }
    }
}





