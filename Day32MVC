<!DOCTYPE html>
<html>
	<head>
		<title>
			My Site
		</title>
        
	</head>
	<body>
<H1>Hello World</h1>
	<form>
		Enter your Branch:<select name="brn">
			<option value="Q1gur">Gurgaon</option>
			<option value="q1Kolkata">Kolkatta</option>
			<option value="q1Mum">Mumbai</option>
		</select>
		<input type="submit">
	</form>
	</body>
</html>







CookController:


using Microsoft.AspNetCore.Mvc;
using System.Linq;

namespace Day32MVC.Controllers
{
    public class CookController : Controller
    {
        public IActionResult Index()
        {
            return View();
        }
        public IActionResult AddCooky(string cooky)
        {
            HttpContext.Response.Cookies.Append("clientCookie", cooky);
            return View();
        }
        public IActionResult ViewCooky(string cooky)
        {
            string myCookie = "";
            if (HttpContext.Request.Cookies.ContainsKey("clientCookie"))
            {
                myCookie = HttpContext.Request.Cookies["clientCookie"];
            }
            ViewData["cooky"] = myCookie;
            return View();
        }
    }
}







Index.cshtml:

<H1>This is going to add a cookie in the site:</H1>

<h2>
    <form action="/Cook/AddCooky">
        Enter Cookie Value : <input type="text" name="cooky" /> <br />
        <input type="submit" value="Add Cookie" />
    </form>

</h2>





AddCooky.cshtml:

<h1> The Cookie was added</h1>

<h3><a href="/Cook/ViewCooky">View Cookie</a></h3>




ViewCooky.cshtml:

<h1>
    The Cookie is read:
    <br>
    Cookie : <b><i><u>@ViewData["cooky"]</u></i> </b>
</h1>






Exercise:

Controller: LoginController
Index -> View()
Login -> View()
Loggin(string uname, string pass) -> Add 2 cookies :(”username”, uname); (“password”,pass) -> View()

Index.cshtml:
Link to login page
Login.cshtml:
Username: 
Password:
Login button: action = “/Login/Loggin”
Loggin.cshtml:
H1-> This is my Inbox page





Loggin.cshtml:
link to Inbox page : Login/Inbox
Link to Draft page : Login/Draft
Link to Sent page : Login/Sent

Controller: LoginController
Add Action:
Inbox() /Draft() / Sent()-> 
string u = get the username cookie; 
string p = get the password cookie; 
View();
LogErr()-> 
View();




Inbox.cshtml
H1->Inbox authenticated page
Draft.cshtml
H1->Draft authenticated page
Sent.cshtml
H1->Sent authenticated page
LogErr.cshtml
H1->Login Error ; link to login page





Controller: LoginController
Inbox() /Draft() / Sent()-> 
string u = get the username cookie; 
string p = get the password cookie; 
If((u!=“” && p!=“”)||(u!=null && p!=null))
View();
Else
Redirect to (“logErr”)
Logout()->
Make the cookies empty: cookies.append(“username”,””), cookies.append(“password”,””)
View();




Inbox.cshtml
H1->Inbox authenticated page
H1-> logout link
Draft.cshtml
H1->Draft authenticated page
H1-> logout link
Sent.cshtml
H1->Sent authenticated page
H1-> logout link
LogErr.cshtml
H1->Login Error ; link to login page
Logout.cshtml
H1->Successfully logged out ; link to login page




Exercise 2:


MCQController
Index () ->
Set cookies as “Q1”->”0”,”Q2”->”0”,…”Q5”->”0”
View
MCQ1(string ans)->
if Q2 cookie is “0”, then check ans being “No”, if ans==“No” then set the cookie Q2 as 10. 
View()
MCQ2(string ans)->
if Q1 cookie is “0”, then check ans being “Cool”, if ans==“Cool” then set the cookie Q1 as 10. 
if Q3 cookie is “0”, then check ans being “Yes”, if ans==“Yes” then set the cookie Q3 as 10. 
View()
MCQ3(string ans)->
if Q2 cookie is “0”, then check ans being “No”, if ans==“No” then set the cookie Q2 as 10. 
View()
Result():
Convert all cookies “Q1”, “Q2”, “Q3” values to int, and add them 
ViewData[“res”]=result


Index.cshtml
Enter name:
Start Test is a button to start the test. -> /MCQ/MCQ1
Result.cshtml
H1-> Hi Guest, You have got @ViewData[“res”] marks


MCQ1.cshtml
Q: How is MVC as a framework
Answer: Select Box with options: 4 options
Good
Bad
Cool : right answer
Difficult
Next button takes to MCQ2
See Result


MCQ2.cshtml
Q: Collection Framework is strongly typed
Answer: Select Box with options: 4 options
Yes
No –Right Ans
May Be
Next button takes to MCQ3
Previous button takes to MCQ1

See Result




MCQ3.cshtml
Q: HTML5 has embedded JS code in the page
Answer: Select Box with options: 4 options
Yes : right ans
No
May be
Previous button takes to MCQ2
See Result








