
CREATE TABLE emp4 ( 
emp_id INT,    
last_name VARCHAR(50) NOT NULL,    
first_name VARCHAR(50) NOT NULL,    
salary MONEY
); 

Here we expect errors:
ALTER TABLE emp4 ADD CONSTRAINT emp4_pk PRIMARY KEY (emp_id); 


drop table emp4;

CREATE TABLE emp4 ( 
emp_id INT not null,    
last_name VARCHAR(50) NOT NULL,    
first_name VARCHAR(50) NOT NULL,    
salary MONEY
); 

ALTER TABLE emp4 ADD CONSTRAINT emp4_pk PRIMARY KEY (emp_id); 




ALTER TABLE emp 
ADD CONSTRAINT emp_pk PRIMARY KEY (EmpCode); 


Create a primary key in SQL Server where the primary key is more than one field:
CREATE TABLE emp3  
( last_name VARCHAR(50) NOT NULL,  
  first_name VARCHAR(50) NOT NULL,  
  salary MONEY,  
  CONSTRAINT emp3_pk PRIMARY KEY (last_name, first_name)  
); 






For example: Method 1: Column Constraint

CREATE TABLE emp1
( emp_id INT PRIMARY KEY,  
  last_name VARCHAR(50) NOT NULL,  
  first_name VARCHAR(50) NOT NULL,  
  salary MONEY  
); 


Method 2: Table Constraint

CREATE TABLE emp2  
( emp_id INT,  
  last_name VARCHAR(50) NOT NULL,  
  first_name VARCHAR(50) NOT NULL,  
  salary MONEY,  
  CONSTRAINT emp2_pk PRIMARY KEY (emp_id)  
); 









CREATE TABLE Emp(
EmpCode int IDENTITY(100,1),
EmpName char(25) NOT NULL,
DeptNo char(4) NOT NULL);




sp_help EmployeeLeave;



CREATE TABLE EmployeeLeave
(
EmployeeID int NOT NULL, 
LeaveStartDate datetime NOT NULL,
LeaveEndDate datetime NOT NULL,
LeaveReason varchar(100),
LeaveType char(2)NOT NULL
);





The CREATE TABLE statement is used to create a table.
Syntax:
CREATE TABLE 
    [ database_name . [ schema_name ] .] table_name 
        ( { <column_definition> | <computed_column_definition> }
        [IDENTITY (SEED, INCREMENT)]
[ <table_constraint> ] [ ,...n ] ) 
    [ ON { partition_scheme_name ( partition_column_name ) | filegroup 
        | "default" } ] 
    [ { TEXTIMAGE_ON { filegroup | "default" } ] 
[ ; ]








Create database testdb;

drop database testdb;

Create database testdb;
use testdb;










RDBMS:
Each table in a database has a unique table name.
The row (or record) in the table is called a tuple.
The column (or field) is called an attribute. 
Every column in a table must have a unique name. 
The number of tuples is called the cardinality of the table.
The number of attributes is called the degree of the table.
A column or combination of columns that uniquely identifies each row in the table is called the primary key 
A table where every row is different from all other rows is called a relation.
A domain is a collection of values from which one or more attributes (columns) draw their actual values. 
In RDBMS, missing or unknown information is represented as a NULL value in a table. 
NULL is not the same as space or zero.


The various types of keys used in an RDBMS are:
Primary : Unique + Not Null
Foreign : Pkey in other Relation
Candidate: Many keys who can become PKey
Alternate : Can become PKey



Normalization results in the formation of tables that satisfy certain normal forms.
The normal forms are used to remove various types of abnormalities and inconsistencies from the database.
The most important and widely used normal forms are:
First Normal Form (1NF)
when each cell of the table contains precisely one value
RDBMS
Second Normal Form (2NF)
No partial dependency exists between non-key attributes and key attributes
Pkey or AltKey
Third Normal Form (3NF)
No transitive (indirect) dependency exists between non-key attributes and key attributes
CompositeKey : work for all records
Boyce-Codd Normal Form (BCNF)
if and only if every determinant is a candidate key
CandidateKey







