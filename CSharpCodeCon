








using System;

namespace Prj1Day1Con
{
    class Program
    {
        enum Weekday { Sun=1, Mon, Tue, Wed, Thurs, Fri, Sat}
        static void Main()
        {
            Console.WriteLine("Enter current Weekday(1 -7):");
            int wd = Convert.ToInt32(Console.ReadLine());
            switch (wd)
            {
                case 1:
                    Console.WriteLine("First Day of the Week: " + (Weekday)wd);
                    break;
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                    Console.WriteLine("{0}th Day of the Week: {1}",wd, (Weekday)wd);
                    break;
                case 7:
                    Console.WriteLine("Last Day of the Week: " + (Weekday)wd);
                    break;
                default:
                    Console.WriteLine("Invalid Day number entered!");
                    break;

            }

        }
    }
}

/*

Enter current Weekday(1 -7):
5
5th Day of the Week: Thurs

*/















using System;

namespace Prj1Day1Con
{
    class Program
    {
        static void Main()
        {
            int marks = 90;
            if (marks > 100)
            {
                Console.WriteLine("Invalid marks (more than 100)");

            }
            else if (marks < 0 )
            {
                Console.WriteLine("Invalid marks(less than 0)");

            }
            else if (marks >= 0 && marks <50)
            {
                Console.WriteLine("Failed!!!!!!");

            }
            else if (marks >= 50 && marks < 75)
            {
                Console.WriteLine("Passed the Exam!!");

            }
            else if (marks >= 75 && marks <= 100)
            {
                Console.WriteLine("Excellent!!!!");

            }
            else
            {
                Console.WriteLine("Imposible reach!");
            }
        }
    }
}

/*

*/









using System;

namespace Prj1Day1Con
{
    class Program
    {
        static void Main()
        {
            int x = 16;
            int y = 12;
            int max = x >= y ? x : y;
            Console.WriteLine("Max of {0}, {1} is : {2}",x,y,max);
        }
    }
}

/*

*/










using System;

namespace Prj1Day1Con
{
    class Program
    {
        static void Main()
        {
            int a = 16;
            Console.WriteLine("Original a :  {0} ", a);
            a += 16;  //a=a+16
            Console.WriteLine("a +=16 :  {0} ", a); //32
            a = 16;
            a -= 8;
            Console.WriteLine("a -=8 :  {0} ", a); //8
            a = 16;
            a /= 8;
            Console.WriteLine("a /=8 :  {0} ", a); //2
            a = 16;
            a *= 4;
            Console.WriteLine("a *=4 :  {0} ", a); //64
            a = 16;
            a %= 3;
            Console.WriteLine("a %=3 :  {0} ", a); //1
            a = 16;
            a <<= 2; //a =a<<2
            Console.WriteLine("a <<=2 :  {0} ", a); //64
            a = 16;
            a >>= 2; //a =a>>2
            Console.WriteLine("a >>=2 :  {0} ", a); //4
            a = 16;
            a |= 2; //a =a|2
            Console.WriteLine("a |=2 :  {0} ", a); //18
            a = 16;
            a &= 19; //a =a & 19
            Console.WriteLine("a &=19 :  {0} ", a); //16
            a = 16;
            a ^= 2; //a =a^2
            Console.WriteLine("a ^=2 :  {0} ", a); //18
        }
    }
}

/*
Original a :  16
a +=16 :  32
a -=8 :  8
a /=8 :  2
a *=4 :  64
a %=3 :  1
a <<=2 :  64
a >>=2 :  4
a |=2 :  18
a &=19 :  16
a ^=2 :  18
*/












using System;

namespace Prj1Day1Con
{
    class Program
    {
        static void Main()
        {
            Console.WriteLine("2147483647 << 1 : " + (2147483647 << 1)); 
            //-ve value as this is the largest +ve value, when shifted 
            //will make the last sign bit to be 1
            Console.WriteLine("10<<2 : " + (10 << 2)); // 40
            Console.WriteLine("10<<1 : " + (10 << 1));  //20
            Console.WriteLine("16>>2 : " + (16 >> 2)); //4
            Console.WriteLine("16>>1 : " + (16 >> 1)); //8

        }
    }
}

/*
2147483647 << 1 : -2
10<<2 : 40
10<<1 : 20
16>>2 : 4
16>>1 : 8
*/











using System;

namespace Prj1Day1Con
{
    class Program
    {
        static void Main()
        {
            int a = 10;
            int b = 5;
            Console.WriteLine("T && T : 10>5 && 10>=5 :  " + (10 > 5 && 10 >= 5));
            Console.WriteLine("T && F : 10>5 && 10<5 :  " + (10 > 5 && 10 < 5));
            Console.WriteLine("F && T : 10<=5 && 10>=5 :  " + (10 <= 5 && 10 >= 5));
            Console.WriteLine("F && F : 10<5 && 10<=5 :  " + (10 < 5 && 10 <= 5));
            Console.WriteLine("T || T : 10>5 || 10>=5 :  " + (10 > 5 || 10 >= 5));
            Console.WriteLine("T || F : 10>5 || 10<5 :  " + (10 > 5 || 10 < 5));
            Console.WriteLine("F || T : 10<=5 || 10>=5 :  " + (10 <= 5 || 10 >= 5));
            Console.WriteLine("F || F : 10<5 || 10<=5 :  " + (10 < 5 || 10 <= 5));
            Console.WriteLine("!T : !(10>5) :  {0}\n!F : !(10<5) : {1} ", !(10 > 5) , !(10 < 5));

        }
    }
}











using System;

namespace Prj1Day1Con
{
    class Program
    {
        static void Main()
        {
            int a = 10;
            int b = 5;
            bool res = a > b;
            Console.WriteLine("Here a={4},b={5}\na>b : {0} \n a<b : {1}\n a<=b : {2}\n a>=b : {3}", res,
                (a < b), (a <= b), (a >= b), a, b);
            Console.WriteLine("a==b: {0} \n a!=b : {1} ", (a == b), (a != b));
        }
    }
}
/*
  Here a=10,b=5
a>b : True
 a<b : False
 a<=b : False
 a>=b : True
a==b: False
 a!=b : True
*/












using System;

namespace Prj1Day1Con
{
    class Program
    {
        static void Main()
        {
            Console.WriteLine("Bitwise Operations: ");
            Console.WriteLine("4 | 5 = " + (4 | 5) + " \n4 & 5 = " + (4 & 5)); //5 .. 4
            Console.WriteLine("Not 4 = " + (~4) );  //-5
            Console.WriteLine("4 ^ 5 = " + (4 ^ 5) ); //1

        }
    }
}














//Arithmetic Operators:
using System;

namespace Prj1Day1Con
{
    class Program
    {
        static void Main()
        {
            int x = 10, y = 20, z = 0, d=3;
            int res = x + y;
            Console.WriteLine("Addition Operator  : {0} + {1} = {2}", x, y, res);
            res = x - y;
            Console.WriteLine("Subtraction Operator  : {0} - {1} = {2}", x, y, res);
            res = x * y;
            Console.WriteLine("Multiplication Operator  : {0} * {1} = {2}", x, y, res);
            res = y / x;
            Console.WriteLine("Division Operator  : {0} / {1} = {2}", y, x, res);
            res = z == 0 ? 0 :  y / z;
            Console.WriteLine("Division Operator (divide by zero breaks the program abruptly) : {0} / {1} = {2}", y, z, res);
            res = x % d;
            Console.WriteLine("Remainder Operator  : {0} % {1} = {2}", x, d, res);
            res = x++; //post increment : res = x , x = x + 1
            Console.WriteLine("Post Increment Operator  : (For x = 10) : x++ : x = {0} and res = {1}",x, res);
            x = 10;
            res = ++x; //pre increment : x = x + 1, res =x
            Console.WriteLine("Pre Increment Operator  : (For x = 10) : ++x : x = {0} and res = {1}", x, res);
            x = 10;
            res = x--; //post decrement : res = x , x = x - 1
            Console.WriteLine("Post Decrement Operator  : (For x = 10) : x-- : x = {0} and res = {1}", x, res);
            x = 10;
            res = --x; //pre decrement : x = x - 1, res =x
            Console.WriteLine("Pre Decrement Operator  : (For x = 10) : --x : x = {0} and res = {1}", x, res);
        }
    }
}















using System;

namespace Prj1Day1Con
{
    class Program
    {
        static void Main()
        {
            int x,y;
            Console.WriteLine("Enter x: ");
            x = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Enter y: ");
            y = Int32.Parse(Console.ReadLine());
            Console.WriteLine("Read values: x :" + x + ", y : " + y); 
            Console.WriteLine("Program ends!!");
        }
    }
}













using System;

namespace Prj1Day1Con
{
    class Program
    {
        static void Main()
        {
            Console.WriteLine("Enter your name:");
            string name = Console.ReadLine();
            Console.WriteLine("Entered name: " + name);
            Console.WriteLine("Enter your Grade:");
            char grade = Convert.ToChar(Console.Read());
            Console.WriteLine("Entered grade: " + grade);

            // ReadLine : reads till we pree Enter key
            //ReadKey : reads one key press do not wait for delimiter like space, enterkey etc.
            //Read : reads the ASCII value of the key press, it waits for the delimiter.
            Console.WriteLine("Press any Key to continue..");
            Console.ReadKey();
            Console.WriteLine("Press Enter key to continue..");
            Console.ReadLine();
            Console.WriteLine("Enter a value, then press Enter key to continue..");
            Console.Read();

            Console.WriteLine("Program ends!!");
        }
    }
}










using System;

namespace Prj1Day1Con
{
    class Program
    {
        static void Main()
        {
            int[] arr1 = { 1, 2, 3, 4}; //array has length 4 elements, and index are 0 to 3
            arr1[2] = 70;
            Console.WriteLine("The elements  are: " + arr1[0] + ", " + arr1[1] + ", " + arr1[2] + ", " + arr1[3]);
            Console.WriteLine("Printing the array as a string: " + arr1);
            Console.WriteLine("Length of the array : " + arr1.Length);
            int[] arr2 = new int[5];
            int[] arr3 = new int[4]{ 1, 2, 3, 4 };
            int[] arr4 = new int[] { 1, 2, 3, 4 };

        }
    }
}











Pointers: Pointers are considered unsafe for high level languages.
So pointers are coded inside unsafe block in C#.
Any unsafe block cannot exist in a safe project. 
So declare the project to be unsafe.


using System;

namespace PointerUnsafePrj
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int x = 10;
            unsafe
            {
                int* p = &x;
                int a = (int)p;
                Console.WriteLine((*p) + " has address as : " + a);
            }

        }
    }
}








using System;

namespace Prj1Day1Con
{
    enum Color : byte
    {
        Red = 1,
        Green = 2,
        Blue = 4,
        Violet = 5,
        BlueViolet = Blue | Violet,
        Black = 0,
        White = Red | Green | Blue
    }

    class Program
    {
        enum Month { Jan=1, Feb, Mar, Apr, May, Jun, Jly, Aug, Sep, Oct, Nov, Dec };

        static void Main()
        {
            Month first = Month.Jan;
            Month second = (Month)2;
            Month last = first + 11;
            int march = (int)Month.Mar;
            Console.WriteLine("First Month : " + first + " has Month number : " + (int)first);
            Console.WriteLine("Last Month : " + last + " has Month number : " + (int)last);
            Color c = Color.White;
            System.Console.WriteLine(c);   // White
            System.Console.WriteLine((int)c);// 7
            Color c2 = Color.BlueViolet;
            System.Console.WriteLine(c2);   // BlueViolet
            System.Console.WriteLine((int)c2);// 5
        }
    }
}













using System;

namespace Prj1Day1Con
{
    class Program
    {
        enum Month { Jan=1, Feb, Mar, Apr, May, Jun, Jly, Aug, Sep, Oct, Nov, Dec };

        static void Main()
        {
            Month first = Month.Jan;
            Month second = (Month)2;
            Month last = first + 11;
            int march = (int)Month.Mar;
            Console.WriteLine("First Month : " + first + " has Month number : " + (int)first);
            Console.WriteLine("Last Month : " + last + " has Month number : " + (int)last);





        }
    }
}














using System;

namespace Prj1Day1Con
{
    class Program
    {
        static void Main()
        {
            const int i = 10;
            const int l = 20;
            int j = 10;
            int k = 20;
            const int a = i + l;  //j + k;

            Console.WriteLine("A const cannot be re-assigned");
            Console.WriteLine("A const cannot be assigned to non const variables operating on values");
            Console.WriteLine("A const can be assigned to const variables defined priorly");





        }
    }
}














using System;

namespace Prj1Day1Con
{
    class Program
    {
        static void Main()
        {

            char c1 = '\n';
            char c2 = '\t';
            char c3 = '\a';
            char c4 = '\u0144';
            char c5 = '\'';
            char c6 = '\"';
            char c7 = '\\';
            Console.WriteLine("There is a new line " + c1 + "between us! ");
            Console.WriteLine("There is a tab space " + c2 + "between us! ");
            Console.WriteLine("This is a beep sound " + c3);
            Console.WriteLine("There is a unicode char  " + c4 + "between us! ");
            Console.WriteLine("This text is under single quotes " + c5 + "Text!" + c5 + ". That's it!");
            Console.WriteLine("This text is under double quotes " + c6 + "Text!" + c6 + ". That's it!");
            Console.WriteLine("This text is has a slash printed out " + c7 + ". That's it!");



        }
    }
}



/*
There is a new line
between us!
There is a tab space    between us!
This is a beep sound
There is a unicode char  nbetween us!
This text is under single quotes 'Text!'. That's it!
This text is under double quotes "Text!". That's it!
This text is has a slash printed out \. That's it!
*/









using System;

namespace Prj1Day1Con
{
    class Program
    {
        static void Main()
        {
            byte b = 127;
            Console.WriteLine("Wrapper of byte: " + b.GetType());

            short i = 127;
            Console.WriteLine("Wrapper of short: " + i.GetType());

            bool t = true;
            Console.WriteLine("Wrapper of bool: " + t.GetType());

            int x = 10;
            Console.WriteLine("Wrapper of int: " + x.GetType());

            long y = 100l;
            Console.WriteLine("Wrapper of long: " + y.GetType());

            uint ux = 100;
            Console.WriteLine("Wrapper of uint: " + ux.GetType());

            char c = 'A';
            Console.WriteLine("Wrapper of char: " + c.GetType());

            decimal d = (decimal)3.4;
            Console.WriteLine("Wrapper of decimal: " + d.GetType());


            float f = (float)3.4;
            Console.WriteLine("Wrapper of float: " + f.GetType());

            double dd = 3.4;
            Console.WriteLine("Wrapper of double: " + dd.GetType());




        }
    }
}

/*
Wrapper of byte: System.Byte
Wrapper of short: System.Int16
Wrapper of bool: System.Boolean
Wrapper of int: System.Int32
Wrapper of long: System.Int64
Wrapper of uint: System.UInt32
Wrapper of char: System.Char
Wrapper of decimal: System.Decimal
Wrapper of float: System.Single
Wrapper of double: System.Double
*/













using System;

namespace Prj1Day1Con
{
    class Program
    {
        static void Main()
        {
            int x = 10;
            int y = 20;
            int z = x + y;
            //x = 90;
            Console.WriteLine("The sum of " + x + " + " + y + " = " + z);
            z = x * y;
            Console.WriteLine("The product of " + x + " * " + y + " = " + z);

        }
    }
}










using System;

namespace Prj1Day1Con
{
    class Program
    {
        static void Main()
        {
            int x = 10;
            int y = 20;
            int z = x + y;
            
            Console.WriteLine("The sum of " + x + " + " + y + " = " + z);
            
        }
    }
}
