Class Emp{
String firstName;
String LastName;
}
Emp employee =new Emp(“John”,”Doe”);
Gets the form in XML as:


emp.xml

<emp>
	<employee>
		<firstname>John</firstname>
		<lastname>John</lastname>
	</employee>
	<employee>
		<firstname>Lee</firstname>
		<lastname>Con</lastname>
	</employee>
</emp>

open in browser..


JSON:

JavaScript Simple Object Notation: Key value pairs for each object, keys are the attributes and their value is the Object value.
Class Emp{
String firstName;
String LastName;
}
Emp employee =new Emp(“John”,”Doe”);

The JSON format :

var emp = {Employee1 : 
 				{firstName : “John”, lastName : “Doe”},
                 Employee2 : 
 				{firstName : “Lee”, lastName : “Con”}
  		};



var Emp={
  	Eid:101,
 		Ename:”Abc”,
 		Esal:10001
}
var Emps=[
{ 	Eid:101,
 		Ename:”Abc”,
 		Esal:10001
},
{		Eid:101,
 		Ename:”Abc”,
 		Esal:10001
}]





abcdef.html / abcdef.txt

{
 Employee1 : {firstName : "John", lastName : "Doe"},
 Employee2 : {firstName : "Lee", lastName : "Con"}
}













using Day28MVCCtrlr2View.Models;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Razor.TagHelpers;
using Microsoft.Extensions.Logging;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Threading.Tasks;

namespace Day28MVCCtrlr2View.Controllers
{
    class A
    {
        public int id { get; set; }
        public string name { get; set; }
        public override string ToString()
        {
            return "The Emp details : id : "+ id + " name : "+ name;
        }
    }
    public class HomeController : Controller
    {
        private readonly ILogger<HomeController> _logger;

        public HomeController(ILogger<HomeController> logger)
        {
            _logger = logger;
        }

        public IActionResult Index()
        {
            return View();
        }
        public JsonResult helloA()
        {
            A a = new A { id = 101, name = "Guest" };
            return Json(a);
        }
        public string helloB()
        {
            A a = new A { id = 102, name = "Visitor" };
            return a.ToString();
        }
        public IActionResult Privacy()
        {
            return View();
        }

        [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]
        public IActionResult Error()
        {
            return View(new ErrorViewModel { RequestId = Activity.Current?.Id ?? HttpContext.TraceIdentifier });
        }
    }
}












