Class Emp{
String firstName;
String LastName;
}
Emp employee =new Emp(“John”,”Doe”);
Gets the form in XML as:


emp.xml

<emp>
	<employee>
		<firstname>John</firstname>
		<lastname>John</lastname>
	</employee>
	<employee>
		<firstname>Lee</firstname>
		<lastname>Con</lastname>
	</employee>
</emp>

open in browser..


JSON:

JavaScript Simple Object Notation: Key value pairs for each object, keys are the attributes and their value is the Object value.
Class Emp{
String firstName;
String LastName;
}
Emp employee =new Emp(“John”,”Doe”);

The JSON format :

var emp = {Employee1 : 
 				{firstName : “John”, lastName : “Doe”},
                 Employee2 : 
 				{firstName : “Lee”, lastName : “Con”}
  		};



var Emp={
  	Eid:101,
 		Ename:”Abc”,
 		Esal:10001
}
var Emps=[
{ 	Eid:101,
 		Ename:”Abc”,
 		Esal:10001
},
{		Eid:101,
 		Ename:”Abc”,
 		Esal:10001
}]





abcdef.html / abcdef.txt

{
 Employee1 : {firstName : "John", lastName : "Doe"},
 Employee2 : {firstName : "Lee", lastName : "Con"}
}













using Day28MVCCtrlr2View.Models;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Razor.TagHelpers;
using Microsoft.Extensions.Logging;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Threading.Tasks;

namespace Day28MVCCtrlr2View.Controllers
{
    class A
    {
        public int id { get; set; }
        public string name { get; set; }
        public override string ToString()
        {
            return "The Emp details : id : "+ id + " name : "+ name;
        }
    }
    public class HomeController : Controller
    {
        private readonly ILogger<HomeController> _logger;

        public HomeController(ILogger<HomeController> logger)
        {
            _logger = logger;
        }

        public IActionResult Index()
        {
            return View();
        }
        public JsonResult helloA()
        {
            A a = new A { id = 101, name = "Guest" };
            return Json(a);
        }
        public string helloB()
        {
            A a = new A { id = 102, name = "Visitor" };
            return a.ToString();
        }
        public IActionResult Privacy()
        {
            return View();
        }

        [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]
        public IActionResult Error()
        {
            return View(new ErrorViewModel { RequestId = Activity.Current?.Id ?? HttpContext.TraceIdentifier });
        }
    }
}







https://localhost:44338/home/helloB

https://localhost:44338/home/helloA





VIEWDATA:




using Microsoft.AspNetCore.Mvc;

namespace Day28MVCCtrlr2View.Controllers
{
    public class EmployeeController : Controller
    {
        public IActionResult Index()
        {
            return View();
        }

        public IActionResult WelcomeEmp()
        {
            ViewData["EmpName"] = "Monica";
            return View();
        }
        public IActionResult WelcomeEmp2(string name)
        {
            ViewData["EmpName"] = name;
            return View();
        }

    }
}






	public IActionResult WelcomeEmp()
        {
            ViewData["EmpName"] = "Monica";
            return View();
        }
        public IActionResult WelcomeEmp2(string name)
        {
            ViewData["EmpName"] = name;
            return View();
        }





Views/Employees/Index.cshtml:

<h1>
	<a href="/Employee/WelcomeEmp">Welcome Emp Page</a>
	<Br />

	<form action="/Employee/WelcomeEmp2">
		Name: <input type="text" name="name" />
		<input type="submit" value="WelcomeEmp2" />
	</form>
</h1>




Views/Employees/WelcomeEmp2.cshtml:

<h1>
    Welcome @ViewData["EmpName"] !!
</h1>





Views/Employees/WelcomeEmp.cshtml:

<h1>
    Welcome @ViewData["EmpName"] !!
</h1>



https://localhost:44338/Employee/Index




VIEWBAG:



  	public IActionResult WelcomeEmp()
        {
            //ViewData["EmpName"] = "Monica";
            ViewBag.EmpName = "Monica";

            return View();
        }
        public IActionResult WelcomeEmp2(string name)
        {
            //ViewData["EmpName"] = name;
            ViewBag.EmpName = name;
            return View();
        }




Views/Employees/WelcomeEmp2.cshtml:

<h1>
   Welcome @ViewBag.EmpName !!
</h1>





Views/Employees/WelcomeEmp.cshtml:

<h1>
    Welcome @ViewBag.EmpName !!
</h1>





TEMPDATA:
 public IActionResult WelcomeEmp()
        {
            //ViewData["EmpName"] = "Monica";
            //ViewBag.EmpName = "Monica";
            TempData["EmpName"] = "Monica";


            return View();
        }
        public IActionResult WelcomeEmp2(string name)
        {
            //ViewData["EmpName"] = name;
            //ViewBag.EmpName = name;
            TempData["EmpName"] = name;

            return View();
        }





Views/Employees/WelcomeEmp2.cshtml:

<h1>
    Welcome @TempData["EmpName"] !!
</h1>





Views/Employees/WelcomeEmp.cshtml:

<h1>
    Welcome @TempData["EmpName"] !!
</h1>




Exercise:
Design a new Asp.Net MVC Project displaying a form which contains first name and last name entered in a view as an html, get it submitted to another view (controlled by the controller)
Step1:Create an MVC web app
ExerciseMVC
Step2: Add a controller
StudentController
Add actions(): Form, Welcome
Step3: Add views :
Form (form)
Welcome (submitted view): “Welcome to my Site, lastname, Firstname”
Step 4: Deploy:
….\Student\Form






Redirection Example:


	public IActionResult Welcome1(string name)
        {
            if (name == "PWC")
                return RedirectToAction("Welcome2");
            else
                return RedirectToAction("Welcome3"); 
        }
        public IActionResult Welcome2()
        {
            return View();
        }
        public IActionResult Welcome3()
        {
            return View();
        }



Views/Employees/Welcome1.cshtml:

<h1>Its not required</h1>



Views/Employees/Welcome2.cshtml:

<h1>Login successful!!</h1>



Views/Employees/Welcome3.cshtml:

<h1>Login NOT successful!!</h1>




Views/Employees/Index.cshtml:

<h1>
	@*<a href="/Employee/WelcomeEmp">Welcome Emp Page</a>
	<Br />*@

	<form action="/Employee/Welcome1">
		Name: <input type="text" name="name" />
		<input type="submit" value="Login" />
	</form>
</h1>




Exercise:
Prepare an Index form for taking in the username and password, submitted to a controller. 
The controller uses an Ado.Net function to authenticate the credentials.
If authenticated, goto success page, else goto not successful page.




