



package pkg2;
abstract class GUIOS{
	public void common() {
		System.out.print("\nMouse, files, Desktop, ");
	}
	public abstract void dir() ;
	
}
class WinOS extends GUIOS{
	public void dir() {
		System.out.print("Folder, ");
	}
	public void cmd() {
		System.out.println("Cmd line \n");
	}
}
class LinuxOS extends GUIOS{
	public void dir() {
		System.out.print("Dirs, ");
	}
	public void terminal() {
		System.out.println("Terminal \n");
	}
}
class MacOS extends GUIOS{
	public void dir() {
		System.out.print("Dirs, ");
	}
	public void terminal() {
		System.out.println("Terminal \n");
	}
}

public class OSMain {

	public static void main(String[] args) {
		GUIOS os1 = new WinOS();
		os1.common();
		os1.dir();
		if(os1 instanceof WinOS) {
			WinOS os= (WinOS)os1;
			os.cmd();
		}
		if(os1 instanceof LinuxOS) {
			LinuxOS os= (LinuxOS)os1;
			os.terminal();
		}
		if(os1 instanceof MacOS) {
			MacOS os= (MacOS)os1;
			os.terminal();
		}
	}

}





















Specialization and Generalization:


package pkg2;

public class MainInheritance1 {
	public static void Trainer(Dinosur d) {
		d.breathe();
		d.eat();
		if(d instanceof DinosurFly) {
			DinosurFly df = (DinosurFly)d;
			df.fly();
		}
		if(d instanceof DinosurCrawl) {
			DinosurCrawl dc = (DinosurCrawl)d;
			dc.crawl();
		}
		if(d instanceof DinosurSwim) {
			DinosurSwim ds = (DinosurSwim)d;
			ds.swim();
		}
		if(d instanceof DinosurWalk) {
			DinosurWalk ds = (DinosurWalk)d;
			ds.walk();
		}
	}

	public static void main(String[] args) {
		System.out.println("A flying dinosur Training: ");
		Trainer(new DinosurFly());
		System.out.println("A crawling dinosur Training: ");
		Trainer(new DinosurCrawl());
		System.out.println("A normal dinosur Training: ");
		Trainer(new Dinosur());	
		System.out.println("A Walking dinosur Training: ");
		Trainer(new DinosurWalk());
		
		
//		Dinosur d1 = new DinosurFly(); //DinosurFly is generalized into Dinosur. Upcasting
//		d1.breathe();
//		d1.eat();
////		System.out.println(d1 instanceof Dinosur); //d1 is a Dinosur //true
////		System.out.println(d1 instanceof DinosurFly); //d1 is a DinosurFly //true
////		System.out.println(d1 instanceof DinosurCrawl); //d1 is not a DinosurCrawl //false
////		System.out.println(d1 instanceof DinosurSwim); //d1 is not a DinosurSwim //false
//		if(d1 instanceof DinosurFly) {
//			DinosurFly df1 = (DinosurFly) d1; //downcasting // specialized casting
//			df1.fly(); //specialization
//		}
//		if(d1 instanceof DinosurCrawl) {
//			DinosurCrawl dc1 = (DinosurCrawl) d1; //downcasting // specialized casting
//			dc1.crawl(); //specialization
//		}
//		
		
		
		
	}

}







package pkg2;

public class DinosurWalk extends Dinosur{
	
	public DinosurWalk() {
		System.out.println("Walking DinosurChild is created");
	}
	public void walk() {
		System.out.println("A Child4 Dinosur can walk");
	}
}







package pkg2;

public class DinosurSwim extends Dinosur{
	
	public DinosurSwim() {
		System.out.println("Flying DinosurChild is created");
	}
	public void swim() {
		System.out.println("A Child3 Dinosur can swim");
	}
}






package pkg2;

public class DinosurCrawl extends Dinosur{
	
	public DinosurCrawl() {
		System.out.println("Crawling DinosurChild is created");
	}
	public void crawl() {
		System.out.println("A Child2 Dinosur can crawl");
	}
	public void eat() {
		System.out.println("A Dinosur eats any thing (veg, non-veg)");
	}
}








package pkg2;

public class DinosurFly extends Dinosur{
	
	public DinosurFly() {
		System.out.println("Flying DinosurChild is created");
	}
	public void fly() {
		System.out.println("A Child1 Dinosur can fly");
	}
}








package pkg2;

public class Dinosur {
	public Dinosur() {
		System.out.println("DinosurPa is created");
	}
	public void breathe() {
		System.out.println("A Dinosur can breathe in Oxygen");
	}
	public void eat() {
		System.out.println("A Dinosur eats vegetables");
	}

}



















package pkg2;

public class MainInheritance1 {

	public static void main(String[] args) {
		Child c1=new Child();
		c1=null;
		System.gc();
	}

}







package pkg2;

public class Child extends Pa{
	public Child() {
		System.out.println("Child is created");
	}
	public void finalize() {
		System.out.println("Child is GC");
	}
}









package pkg2;

public class Pa {
	public Pa() {
		System.out.println("Pa is created");
	}
	public void finalize() {
		System.out.println("Pa is GC");
	}

}










package pkg2;

public class MainEmployee {
	public static void sum(int a, int b) {
		int c = a+b;
		System.out.println(c);
	}
	public static int mul (int a, int b) {
		return a * b;
	}

	public static void main(String[] args) {
		int x=10; //local variable : needs initialization before usage
		System.out.println(x);
		Employee.compName="Google";
		//Employee.id =100;
		Employee e1 = new Employee();
		e1.id = 101;
		e1.compName = "Gmail";
		e1.input(101, "John", 10);
		e1.print();
		Employee e2 = new Employee();
		e2.input(102, "Doe", 11);
		e2.print();
		Employee e3 = new Employee();
		e3.print();
		System.out.println("\n\nE3 printed out:");
		System.out.println(e3);
		
		sum(5,6);
		int res = mul(7,8);
		System.out.println(res);
	}

}














package pkg2;

public class Employee {
    public int id; //instance Variable defaults to 0 as int
    private String name;//instance Variable defaults to null as an Object
    private int sal;
    public static String compName; //Class variable
    public Employee() {
    	id=100;
    	name="Guest";
    	sal=0;
    }
    
    public void appraisal(int newSal){
    	this.sal = newSal;
    }
    public void input(int id, String name, int sal) { //parameter variables, get the values from function call
    	this.id = id;
    	this.name = name;
    	this.sal = sal;
    }
    public void print() {
    	System.out.println("The Employee details : id : " + id + " name : "  + name + " sal : " + sal +
    			"    Works in : " + compName);
    }
    public String toString() {
    	return "Emp : id : " + id + " name : "  + name + " sal : " + sal + " Works in : " + compName;
    }

}













package pkg1;
import java.util.Scanner; //already present in JDK

public class Menu1 {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		int ch;
		String name= "";
		while(true) {
			System.out.println("Menu:\n1.Enter name.\n2.Display Name\n3.Exit\nEnter Choice:");
			ch = sc.nextInt();
			sc.nextLine();
			if(ch==1) {
				System.out.println("What is your name ? ");
				name = sc.nextLine();
			}
			else if(ch==2) {
				System.out.println("The name is : " + name);
			}
			else if(ch ==3) {
				break;
			}
			else {
				System.out.println("Incorrect choice entered!!(ch can be 1-3 only)");
			}
			
		}
	}

}












package pkg1;
import java.util.Scanner; //already present in JDK

public class Menu1 {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter a number: ");
		int x = sc.nextInt();
		sc.nextLine();
		System.out.println("The value enterd is : " + x);
		System.out.println("Enter your name: ");
		String n = sc.nextLine();
		System.out.println("Welcome " + n + " to the world of Java!!");
	}

}













package pkg1;

public class MainEmployee {
	public static void sum(int a, int b) {
		int c = a+b;
		System.out.println(c);
	}
	public static int mul (int a, int b) {
		return a * b;
	}

	public static void main(String[] args) {
		int x=10; //local variable : needs initialization before usage
		System.out.println(x);
		Employee.compName="Google";
		//Employee.id =100;
		Employee e1 = new Employee();
		e1.id = 101;
		e1.compName = "Gmail";
		e1.input(101, "John", 10);
		e1.print();
		Employee e2 = new Employee();
		e2.input(102, "Doe", 11);
		e2.print();
		Employee e3 = new Employee();
		e3.print();
		
		sum(5,6);
		int res = mul(7,8);
		System.out.println(res);
	}

}










package pkg1;

public class Employee {
    public int id; //instance Variable defaults to 0 as int
    private String name;//instance Variable defaults to null as an Object
    private int sal;
    public static String compName; //Class variable
    public void appraisal(int newSal){
    	this.sal = newSal;
    }
    public void input(int id, String name, int sal) { //parameter variables, get the values from function call
    	this.id = id;
    	this.name = name;
    	this.sal = sal;
    }
    public void print() {
    	System.out.println("The Employee details : id : " + id + " name : "  + name + " sal : " + sal +
    			"    Works in : " + compName);
    }

}








package pkg1;

public class Hello {

	 public static  void main(String[] args) {
		int[] marks = new int[5];
		marks[0] = 10;
		marks[1] = 20;
		marks[2] = 80;
		marks[3] = 90;
		marks[4] = 56; 
		
		System.out.println(marks[0]);//10
		System.out.println("Array by for .. in loop: ");
		for(int ele : marks ) {
			System.out.println(ele);
		}
		System.out.println("Array by for loop: ");
		for(int i = 0 ; i < marks.length ; i++) {
			System.out.println(marks[i]);
		}
		 
	}

	
}











package pkg1;

public class Hello {

	 public static  void main(String[] args) {
		int[] marks = {10, 20, 80, 90, 56 }; 
		System.out.println(marks[0]);//10
		System.out.println("Array by for .. in loop: ");
		for(int ele : marks ) {
			System.out.println(ele);
		}
		System.out.println("Array by for loop: ");
		for(int i = 0 ; i < marks.length ; i++) {
			System.out.println(marks[i]);
		}
		 
	}

	
}









package pkg1;

public class Hello {

	 public static  void main(String[] args) {
		System.out.println("For Loop");
		for(int i=0;i<10;i++) {
			if(i==4)
				continue;
			if(i==7)
				break;			
			System.out.println("i = " + i );
		}
		int j=0;
		System.out.println("While Loop: ");
		while(j<10) {
			System.out.println("j = " + j );
			j++;
		}
		int i=0;
		System.out.println("do .. While Loop: ");
		 do {
			System.out.println("i = " + i );
			i++;
		}while(i<10);
		 
		 
	}

	
}
















package pkg1;

public class Hello {

	 public static  void main(String[] args) {
		var grade = 'A';
		switch(grade) {
		case 'A':
			System.out.println("Excellent");
			break;
		case 'B':
			System.out.println("Pass");
			break;
		case 'C':
			System.out.println("Fail");
			break;
		default:
			System.out.println("Invalid grade");
			break;
				
		}
	}

	
}







package pkg1;

public class Hello {

	 public static  void main(String[] args) {
		var marks = 90;
		if(marks < 50 ) {
			System.out.println("Fail");
		}
		else if(marks < 75){
			System.out.println("Pass");
		}
		else if(marks <100){
			System.out.println("Excellent");
		}
		else {
			System.out.println("Invalid marks");
		}

	}

	
}
