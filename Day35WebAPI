Step 1:
MemberAPI:

Create a new Project with 
Language: C#, 
Project Template Type: Web
Project Template : ASP.NET Core Web API
Click Next 
Configure a new Project with 
Project Name : MemberAPI, 
Project Location : Default
Click Next
Give defaults in Additional Information
Click Create

New Web API gets created

It gets the default API as the Weather Forecast API.

Start the Project in IIS Express (Internet Explorer or Microsoft Edge or Chrome or any of your favorite browser).

Install the Certificate for SSL 




Step 2:

Member.Data class library:

Create a new Project with 
Language: C#, 
Project Template Type: All Project types
Project Template : Class Library
Click Next 
Configure a new Project with 
Project Name : Member.Data, 
Project Location : Default
Click Next
Select .Net 5.0 as Version
Click Create
New Class Library gets created

Now Add three Folders: Model, Interface, and Repository in Member.Data Class library.

In the model folder, create a Model Class called Members.

In the interface, Create Member Interface called IMember.

In the repository folder, Create Class Called “MembersRepository” and implement IMember interface in it. 

In the real world, this class will interact with DB but in this demo, I will use hardcoded members data.




Step3: Code the Library:


Members.cs:

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Member.Data.Model
{
    public class Members
    {
        public int MemberId { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string Address { get; set; }
    }

}




IMember.cs:

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Member.Data.Model;

namespace Member.Data.Interface
{
    public interface IMember
    {
        List<Members> GetAllMember();
        Members GetMember(int id);
    }

}





MembersRepository.cs:

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Member.Data.Interface;
using Member.Data.Model;

namespace Member.Data.Repository
{
    public class MembersRepository : IMember
    {
        List<Members> lisMembers = new List<Members>        {
            new Members{MemberId=1, FirstName="Kirtesh", LastName="Shah", Address="Vadodara" },
            new Members{MemberId=2, FirstName="Nitya", LastName="Shah", Address="Vadodara" },
            new Members{MemberId=3, FirstName="Dilip", LastName="Shah", Address="Vadodara" },
            new Members{MemberId=4, FirstName="Atul", LastName="Shah", Address="Vadodara" },
            new Members{MemberId=5, FirstName="Swati", LastName="Shah", Address="Vadodara" },
            new Members{MemberId=6, FirstName="Rashmi", LastName="Shah", Address="Vadodara" },
        };
        public List<Members> GetAllMember()
        {
            return lisMembers;
        }
        public Members GetMember(int id)
        {
            return lisMembers.FirstOrDefault(x => x.MemberId == id);
        }
    }
}








Step4: Code the Web API:


Open MemberAPI Project
Add the project Member.Data project in the current Solution.
Add the MemberAPI project dependencies as “Member.Data” 
Right Click on MemberApi- Dependencies and add Project Reference.
Now we will create in MemberAPI a Controller in the Controller folder. 
Right-click on the Controller folder and Click on Add-Controller  
Add API-Controller-Empty
Name it MemberController.cs
Code It.






using Member.Data.Model;
using Member.Data.Interface;
using Member.Data.Repository;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;

namespace Day35WebAPI.Controllers
{
    [Route("api/[controller]")]
    //[Produces("application/json")]
    [ApiController]
    public class MemberController : ControllerBase
    {
        private IMember members = new MembersRepository();
        [Microsoft.AspNetCore.Mvc.HttpGet]
        public ActionResult<IEnumerable<Members>> GetAllMembers()
        {
            return members.GetAllMember();
        }
        [Microsoft.AspNetCore.Mvc.HttpGet("id")]
        public ActionResult<Members> GetMemberById(int id)
        {
            return members.GetMember(id);
        }
    }
}






Exercise:

Prepare a WEB API project: Day36WebAPI
Add Model folder:
    Employee.cs (eid, ename, esal, eaddress, ephone)
    EmpList.cs
        Add 5 emps
        GetEmps
        GetEmp(eid)
        AddEmp(eid, ename, esal, eaddress, ephone)
        DelEmp(eid)

Add EmployeeController as a WEB API controller
    Add proper ActionResults
Run API in Swagger





