








***********************************************************************************************************************




Hidden Form Field:

using Microsoft.AspNetCore.Mvc;

namespace Day33MVC.Controllers
{
    public class HiddenFFController : Controller
    {
        public IActionResult Index()
        {
            return View();
        }
        public IActionResult Next(string fullName)
        {
            ViewData["fullName"] = fullName;
            return View();
        }
        public IActionResult Next2(string fullName)
        {
            ViewData["fullName"] = fullName;
            return View();
        }
    }
}




Index:
<form action="/HiddenFF/Next">
    Enter Your Name: <input type="text" name="fullName" />
    <br />
    <input type="submit" value="Next Page"/>
</form>


Next:
<h1>
    Welcome @ViewData["fullName"] !!
    <hr />
    Page1-Authenticated
    <hr />
    <form action="/HiddenFF/Next2">
        <br />
        <input type="hidden" value="@ViewData["fullName"]" name="fullName"/>
        <input type="submit" value="Next to Next Page"/>
    </form>
</h1>



Next2:
<h1>
    Welcome @ViewData["fullName"] !!
    <hr />
    Page2-Authenticated
    <hr />
    <form action="/HiddenFF/Index">
        <br />
        <input type="submit" value="Index" />
    </form>
</h1>















***************************************************************************************************************************


BOOK APPLICATION:

Book.cs
namespace Day33MVC.Models
{
    public class Book
    {
        //ISBN_No, Author, Name, Price
        public int ISBN_No { get; set; }
        public string Author { get; set; }
        public string Name { get; set; }
        public int Price { get; set; }
        public Book() { }

        public Book(int iSBN_No, string author, string name, int price)
        {
            ISBN_No = iSBN_No;
            Author = author;
            Name = name;
            Price = price;
        }
        public override string ToString()
        {
            return "\nISBN Number : " + ISBN_No + 
                " Author : " + Author + " Book Name :" + Name + 
                " Price : " + Price + "Rs.";
        }
    }
}




BookList.cs:

using System.Collections.Generic;

namespace Day33MVC.Models
{
    public class BookList
    {
        //BookList (booksInStock, booksInCart, getBook(ISBN_No), AddToCart(book), viewCart(), ViewAllBooks())
        List<Book> booksInStock = new List<Book>();
        List<Book> booksInCart = new List<Book>();

        public string booksCart()
        {
            string s = "";
            foreach(Book book in booksInCart)
            {
                s += book;
            }
            return s;
        }

        public BookList() {
            booksInStock.Add(new Book(111, "C#", "MS", 1000));
            booksInStock.Add(new Book(112, "Advance C#", "Anonymous", 1200));
            booksInStock.Add(new Book(113, "SQL Server", "C#Corner", 1500));
            booksInStock.Add(new Book(114, "MVC", "MS", 2000));
            booksInStock.Add(new Book(115, "WebAPI", "Tee", 1000));
            booksInStock.Add(new Book(116, "JavaScript", "ECMA", 300));
            booksInStock.Add(new Book(117, "TypeScript", "MS and Google", 300));
            booksInStock.Add(new Book(118, "NodeJS", "Google", 500));
            booksInStock.Add(new Book(119, "Angular", "Google", 3000));
        }

        public Book getBook(int ISBN_No)
        {
            foreach(Book b in booksInStock)
            {
                if (b.ISBN_No == ISBN_No)
                    return b;
            }
            return null;
        }

        public void AddToCart(Book book)
        {
            booksInCart.Add(book);
        }
        public List<Book> viewCart()
        {
            return booksInCart;
        }

        public List<Book> ViewAllBooks()
        {
            return booksInStock;
        }
    }
}



BookController.cs:

using Day33MVC.Models;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using System;

namespace Day33MVC.Controllers
{
    public class BookController : Controller
    {
        static BookList books= new BookList();
        public IActionResult Index()
        {
            return View();
        }
        public IActionResult BooksList()
        {
            return View(books.ViewAllBooks());
        }
        public IActionResult Cart()
        {
            int sum=0;
            foreach(var book in books.viewCart())
            {
                sum += book.Price;
            }
            ViewData["sum"] = sum;
            ViewData["InCookie"] = "";
            if (HttpContext.Request.Cookies.ContainsKey("CartBooks"))
                ViewData["InCookie"] += HttpContext.Request.Cookies["CartBooks"]; 
            return View(books.viewCart());
        }
        public IActionResult AddToCart(int iSBN_No)
        {
            books.AddToCart(books.getBook(iSBN_No));
            
            HttpContext.Response.Cookies.Append("CartBooks", books.booksCart(), new CookieOptions { MaxAge = TimeSpan.FromDays(1) });
            
            return RedirectToAction("Index");
        }
    }
}





Index.cshtml:
<h1>Welcome to the Online Books Store</h1>
<h3><a href="/Book/BooksList">All BooksList</a></h3>
<h3><a href="/Book/Cart">View Cart</a></h3>



BooksList.cshtml:

@model IEnumerable<Day33MVC.Models.Book>

    <form action="/Book/AddToCart">
        <select name="iSBN_No">
            @foreach(var book in Model)
            {
                <option value="@book.ISBN_No">@book</option>
            }
        </select>
        <input type="Submit" value="Add to Cart" />
    </form>


<h3><a href="/Book/Index">Back to HomePage</a></h3>
<h3><a href="/Book/Cart">View Cart</a></h3>





Cart.cshtml:
@model IEnumerable<Day33MVC.Models.Book>

    <h1>The books in the Cart Are: </h1>
    <h2>
        <ul>
            @foreach(var book in Model)
            {
                 <li>@book</li>
            }

        </ul>
    </h2>
    <h2> The Total amount is: @ViewData["sum"] Rs. </h2>
    <h2>From the Cookie: @ViewData["InCookie"]</h2>

<h3><a href="/Book/Index">Back to HomePage</a></h3>







************************************************************************************************************************








