using System;
using System.Collections;

namespace Prj1Day19Col
{

    class Program
    {
        static void Main(string[] args)
        {
            BitArray myBitArr = new BitArray(new byte[] { 0, 0, 1 , 0, 1});
            //0 -> 8 bit -> 0 -> 0000 0000, 1 -> 1000 0000 ; result of 1 is true, and 0 is false
            //length -> 5*8 = 40 : Index : 0 - 39
            // Checking if the BitArray is read-only
            //Console.WriteLine(myBitArr.IsReadOnly);
            // To get the number of elements
            // contained in the BitArray
            Console.WriteLine("\nCount: " + myBitArr.Count);
            Console.WriteLine("\nLength: " + myBitArr.Length);
            // To get the value of index at index 2
            //Console.WriteLine(myBitArr.Get(2));
            PrintValues("\n\nThe BA Initially: ", myBitArr);
            //myBitArr.SetAll(false);
            //PrintValues("\n\nThe BA post setAll(false): ", myBitArr);
            Console.WriteLine("\n\n");
        }
        public static void PrintValues(string s, IEnumerable myList)
        {
            Console.WriteLine(s);
            foreach (Object obj in myList)
            {
                Console.Write(obj + "\t");
            }
        }
    }
}







using System;
using System.Collections;

namespace Prj1Day19Col
{

    class Program
    {
        static void Main(string[] args)
        {
            bool[] b = new bool[] { true, false, true, true };
            BitArray myBitArr = new BitArray(b);
            // Checking if the BitArray is read-only
            Console.WriteLine(myBitArr.IsReadOnly);
            // To get the number of elements
            // contained in the BitArray
            Console.WriteLine(myBitArr.Count);
            // To get the value of index at index 2
            Console.WriteLine(myBitArr.Get(2));
            PrintValues("\n\nThe BA Initially: ", myBitArr);
            myBitArr.SetAll(false);
            PrintValues("\n\nThe BA post setAll(false): ", myBitArr);
            Console.WriteLine("\n\n");
        }
        public static void PrintValues(string s, IEnumerable myList)
        {
            Console.WriteLine(s);
            foreach (Object obj in myList)
            {
                Console.Write(obj + "\t");
            }
        }
    }
}






using System;
using System.Collections;

namespace Prj1Day19Col
{

    class Program
    {
        static void Main(string[] args)
        {
            BitArray myBitArr1 = new BitArray(4);
            BitArray myBitArr2 = new BitArray(4);
            myBitArr1[0] = false;
            myBitArr1[1] = false;
            myBitArr1[2] = true;
            myBitArr1[3] = true;
            myBitArr2[0] = false;
            myBitArr2[2] = false;
            myBitArr2[1] = true;
            myBitArr2[3] = true;
            PrintValues("\n\nBA1 : ", myBitArr1);
            PrintValues("\n\nBA2 : ", myBitArr2);
            PrintValues("\n\nOr : BA1.Or(BA2) : ", myBitArr1.Or(myBitArr2));
        }
        public static void PrintValues(string s, IEnumerable myList)
        {
            Console.WriteLine(s);
            foreach (Object obj in myList)
            {
                Console.Write(obj + "\t");
            }
        }
    }
}





using System;
using System.Collections;

namespace Prj1Day19Col
{

    class Program
    {
        static void Main(string[] args)
        {
            bool[] b = new bool[] { false, false, false, true };
            BitArray myBitArr = new BitArray(b);
            // Checking if the BitArray is read-only
            Console.WriteLine(myBitArr.IsReadOnly);
            // To get the number of elements
            // contained in the BitArray
            Console.WriteLine(myBitArr.Count);
            // To get the value of index at index 2
            Console.WriteLine(myBitArr.Get(2));
            PrintValues("\n\nThe BA: ", myBitArr);
        }
        public static void PrintValues(string s, IEnumerable myList)
        {
            Console.WriteLine(s);
            foreach (Object obj in myList)
            {
                Console.Write(obj + "\t");
            }
        }
    }
}







using System;
using System.Collections;

namespace Prj1Day19Col
{
    
    class Program { 
        static void Main(string[] args)
        {
            BitArray myBitArr = new BitArray(5);
            myBitArr[0] = true;
            myBitArr[1] = true;
            myBitArr[2] = false;
            myBitArr[3] = true;
            myBitArr[4] = false;

            // To get the value of index at index 2
            Console.WriteLine(myBitArr.Get(2));

            // To get the value of index at index 3
            Console.WriteLine(myBitArr.Get(3));

        }

    }
}
