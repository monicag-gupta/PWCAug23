ng generate service Employee



employee.service.ts:

import { Injectable } from '@angular/core';

@Injectable({
  providedIn: 'root'
})
export class EmployeeService {

  public _empList: Array<any> = [];  
    constructor() {  
        this._empList = [{name:'John Doe', city:'Gurgaon'}];  
    }  
     returnEmpData(): Array<any> {  
        return this._empList;  
    }  
     addEmpData(item: any): void {  
        this._empList.push(item);  
    }  
  }




app.module.ts:

import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';

import { AppRoutingModule } from './app-routing.module';
import { AppComponent } from './app.component';
import { ChildComponent } from './child/child.component';
import { LoginComponent } from './login/login.component';
import { InstructionsComponent } from './instructions/instructions.component';
import { AdvertisementsComponent } from './advertisements/advertisements.component';

import { EmployeeService } from './employee.service';  


import { FormsModule, ReactiveFormsModule } from '@angular/forms';  

import { MessageComponent } from './message/message.component';
import { OutmsgComponent } from './outmsg/outmsg.component';    

import { ProperCasePipe } from './propercase.pipe';  





@NgModule({
  declarations: [
    AppComponent,
    ChildComponent,
    LoginComponent,
    InstructionsComponent,
    AdvertisementsComponent,
    MessageComponent,
    OutmsgComponent,
    ProperCasePipe
  ],
  imports: [
    BrowserModule,
    AppRoutingModule,
    FormsModule, 
    ReactiveFormsModule  
  ],
  providers: [EmployeeService],
  schemas: [NO_ERRORS_SCHEMA],  

  bootstrap: [AppComponent]
})
export class AppModule { }









app.component.ts:

import { Component } from '@angular/core';  
import { EmployeeService } from './employee.service';  
@Component({   
	  selector: 'app-root',  
      templateUrl: './app.component.html',  
      styleUrls : ['./app.component.css']        
    })  
  export class AppComponent {  
      public model: any = {};  
      public source: Array<any>;  
      constructor(public service: EmployeeService) {  
            this.source = this.service.returnEmpData();         
      }
       public submit(): void {  
            if (this.validate()) {  
                this.service.addEmpData(this.model);  
                this.reset();         
              }        
       }  
       public reset(): void { 	
        this.model = {}; 	
      }  
       public validate(): boolean {  
               let status: boolean = true;  
               if (typeof (this.model.name) === "undefined") {  
                      alert('Name is Blank');  
                      status = false;     
                      return status;        
                 }  
               else if (typeof (this.model.city) === "undefined") {  
                      alert('City is Blank');  
                      status = false;       
                      return status;         
                 }  
               return status;           
          } 
     } 






app.component.html:

<div>   
      <h2>Employee Form</h2>   
      <table border="1">  
      <tr>   
        <td>Employee Name</td>   
        <td><input type="text" [(ngModel)]="model.name" /></td> 
      </tr>  
      <tr> 
        <td>City</td>   
        <td><input type="text" [(ngModel)]="model.city" /></td> 
      </tr>  
      <tr> 
        <td></td> 
        <td><input type="button" value="Submit" (click)="submit()" />     
        <input type="button" value="Reset" (click)="reset()" /></td>
      </tr> 
    </table>  
    <hr>
    <hr>
    <h3>Employee Details</h3>  
      <div>  
       <table border="1">  
          <thead><tr><th> <span>Employee's Name</span> </th>
                 <th> <span>City</span></th></tr></thead>
          <tbody> <tr *ngFor="let item of source;">  
                  <td><span>{{item.name}}</span></td>   
                  <td><span>{{item.city}}</span></td>  
          </tr> </tbody> 
        </table>  
      </div>  
</div>







******************************************************************************************************

Custom Pipe:

app-> propercase.pipe.ts:

import { Pipe, PipeTransform } from "@angular/core"  
@Pipe({  
    name: 'propercase'  
})  
export class ProperCasePipe implements PipeTransform {  
    transform(value: string, reverse: boolean): string {  
        if (typeof (value) == 'string') {  
            let intermediate = reverse == false ? value.toUpperCase() : value.toLowerCase();  
            return (reverse == false ? intermediate[0].toLowerCase() :  
                intermediate[0].toUpperCase()) + intermediate.substr(1);  
        }          
        else {  
            return value;  
        }  
    } 
} 




app/module.ts:

import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';

import { AppRoutingModule } from './app-routing.module';
import { AppComponent } from './app.component';
import { ChildComponent } from './child/child.component';
import { LoginComponent } from './login/login.component';
import { InstructionsComponent } from './instructions/instructions.component';
import { AdvertisementsComponent } from './advertisements/advertisements.component';

import {FormsModule} from '@angular/forms';
import { MessageComponent } from './message/message.component';
import { OutmsgComponent } from './outmsg/outmsg.component';    

import { ProperCasePipe } from './propercase.pipe';  


@NgModule({
  declarations: [
    AppComponent,
    ChildComponent,
    LoginComponent,
    InstructionsComponent,
    AdvertisementsComponent,
    MessageComponent,
    OutmsgComponent,
    ProperCasePipe
  ],
  imports: [
    BrowserModule,
    AppRoutingModule,
    FormsModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }






app.component.ts:

import { Component } from '@angular/core';  
  
@Component({  
  selector: 'app-root',  
  templateUrl: './app.component.html',  
  styleUrls : ['./custom.css']  
})  
export class AppComponent {  
  public message: string;  
  
  constructor() { this.message = "ThIs is A Custom Pipe";  }  
 
} 



app.component.html:

<div>  
  <div>  
      <h2 >Custom Pipes - Proper Case</h2><br />  
      <div class="row">  
          <div>  
              <span>Enter Text</span>  
          </div>         <div>  
              <input type="text" id="txtFName" 
              placeholder="Enter Text" [(ngModel)]="message" />  
          </div>      </div>  
      <h2>  
          <div>  <span>Result in Proper Case (lower first char then UpperCase rest chars)</span>  </div>  
          <div>  <span>{{message | propercase:false}}</span>  </div>  
          <div>  <span>Result in Reverse Proper Case(upper first char then LowerCase rest chars)</span>  </div>  
          <div>  <span>{{message | propercase:true}}</span>  </div>          
      </h2>      
  </div>  </div> 








***************************************************************************************************


app.component.ts:

import { Component} from '@angular/core';  
 @Component({  
  selector: 'app-root',  
  templateUrl: './app.component.html',  
  styleUrls : ['./custom.css']  
})  
export class AppComponent {  
  public todayDate: Date;  
  public amount: number;  
  public message: string;  
  constructor() { 
    this.todayDate = new Date();  
    this.amount = 100;  
    this.message = "Angular 8.0 + is a Component Based Framework";  
  }  
} 



app.component.html:

<div>     
  <h1>Demonstrate of Pipe in Angular 8+</h1>  

  <h2>Date Pipes</h2>  
  Actual Full Date : {{todayDate}}<br />    
  Short Date : {{todayDate | date:'shortDate'}}<br />  
  Medium Date : {{todayDate | date:'mediumDate'}}<br />      
  Full Date : {{todayDate | date:'fullDate'}}<br />  
  Time : {{todayDate | date:'HH:MM'}}<br />  	  
  Time : {{todayDate | date:'hh:mm:ss a'}}<br />   
  <hr>

  <h2>Number Pipes</h2>  
  No Formatting : {{amount}}<br />     
  2 Decimal Place : {{amount |number:'2.2-2'}}  
  <hr>  

  <h2>Currency Pipes</h2>      
  No Formatting : {{amount}}<br />  
  USD Dollar($) : {{amount |currency:'USD':true}}<br />  
  USD Dollar : {{amount |currency:'USD':false}}<br />  
  INR() : {{amount |currency:'INR':true}}<br />     
  INR : {{amount |currency:'INR':false}}<br />  
  <hr>  

  <h2>String Related Pipes</h2>  
  Actual Message : {{message}}<br />      
  Lower Case : {{message | lowercase}}<br />  
  Upper Case : {{message | uppercase}}<br />  
  <hr>  

  <h2> Percentage Pipes</h2>  
  2 Place Formatting : {{amount | percent :'.2'}}<br />
  <br />   
</div> 








********************************************************************************************************


import { Component, OnInit } from '@angular/core';  
@Component({  
  selector: 'app-root',  
  templateUrl: './app.component.html',  
  styleUrls : ['./custom.css']  
})  
export class AppComponent  
{  
    stds =[{'name':'John', 'id':101},{'name':'Doe', 'id':102}]
    showTasksOf = "Developer"; 
    tasks : string[] = ['Developer','Tester', 'Architect', 'Designer','Others'];
}





<select>  
  <option *ngFor="let std of stds;">{{std.name}} having id: {{std.id}}</option>  
</select> 
<br>

<table border="1">
  <tr>
    <th>Name</th><th>Id</th>
  </tr>
  <tr *ngFor="let std of stds;">
    <td>{{std.name}}</td><td>{{std.id}}</td>
  </tr>
</table>
<hr><hr>
<select [(ngModel)]="showTasksOf">  
  <option *ngFor="let task of tasks;">{{task}}</option>  
</select>  
<ul [ngSwitch]="showTasksOf">
  <li *ngSwitchCase="'Tester'">   
    <ul>
      <li>Report Bugs</li> <li>Reopen Bugs</li> <li>Chill!!</li>
    </ul>  
  </li>
  <li *ngSwitchCase="'Developer'">    
    <ul>
      <li>Code Code Code</li> <li>Bingo</li> <li>Find Coffee!</li>
    </ul>  
  </li>
  <li *ngSwitchCase="'Architect'">    
    <ul>
      <li>Do crazy stuff</li>  <li>Cloud mess</li>  <li>Stroll!</li>
    </ul>  
  </li>
  <li *ngSwitchCase="'Designer'">    
    <ul>
      <li>Out of world</li>     <li>Really??</li>  <li>Draw anything</li>
    </ul> 
  </li>
  <li *ngSwitchDefault>   
    <ul>
      <li>Why you are here???</li>    
      </ul> 
  </li>
</ul>



************************************************************************************************************



app.component.ts:

import { Component, OnInit } from '@angular/core';  
@Component({  
  selector: 'app-root',  
  templateUrl: './app.component.html',  
  styleUrls : ['./custom.css']  
})  
export class AppComponent  
{  
    showTasksOf = "Developer"; 
    tasks : string[] = ['Developer','Tester', 'Architect', 'Designer','Others'];
}


app.component.html:

<select [(ngModel)]="showTasksOf">  
  <option *ngFor="let task of tasks;">{{task}}</option>  
</select>  
<ul [ngSwitch]="showTasksOf">
  <li *ngSwitchCase="'Tester'">   
    <ul>
      <li>Report Bugs</li> <li>Reopen Bugs</li> <li>Chill!!</li>
    </ul>  
  </li>
  <li *ngSwitchCase="'Developer'">    
    <ul>
      <li>Code Code Code</li> <li>Bingo</li> <li>Find Coffee!</li>
    </ul>  
  </li>
  <li *ngSwitchCase="'Architect'">    
    <ul>
      <li>Do crazy stuff</li>  <li>Cloud mess</li>  <li>Stroll!</li>
    </ul>  
  </li>
  <li *ngSwitchCase="'Designer'">    
    <ul>
      <li>Out of world</li>     <li>Really??</li>  <li>Draw anything</li>
    </ul> 
  </li>
  <li *ngSwitchDefault>   
    <ul>
      <li>Why you are here???</li>    
      </ul> 
  </li>
</ul>





custom.css:

/* You can add global styles to this file, and also import other style files */  
select,h1{  
    color:red;  
    font-weight:bold;  
    font-size: 30px;   
}  
li,h2{  
    color:blue;  
    font-size: 20px;  
}  
p{  
    color:brown;  
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;  
} 
b{  
    color:purple;  
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;  
} 




******************************************************************************************************

app.component.ts:

import { Component } from '@angular/core';  
 @Component({  
   selector: 'app-root',  
   templateUrl: './app.component.html',  
   styleUrls : ['./custom.css']  
})  
export class AppComponent {  
  productList: Array<string> = ['IPhone','Galaxy 9.0','Blackberry 10Z'];  
     constructor() { }  
 }



app.component.html

<div>  
  <h2>Demonstrate ngFor</h2>  
  <ul>  
      <li *ngFor="let item of productList">  
          {{item}}  
      </li>  
  </ul>  
</div> 






************************************************************************************

app.component.ts:

import { Component } from '@angular/core';  
@Component({  
  selector: 'app-root',  
  templateUrl: './app.component.html',  
  styleUrls : ['./custom.css']  
})  
export class AppComponent {  
  showInfo: boolean = false;  
  caption: string = 'Show Text';  
  constructor() { }  
  public changeData(): void {  
      this.showInfo = !this.showInfo;  
      if (this.showInfo) {  
          this.caption = 'Hide Text';       
         }  
      else {  
          this.caption = 'Show Text';      
         }  
  }  
} 




app.component.html:

<div>  
  <input type="button" value="{{caption}}" (click)="changeData()"/>  
  <br />  
  <h2 *ngIf="showInfo"><span>Demonstrate of Structural Directives - *ngIf</span></h2>  
</div>








*****************************************************************************************************************


app.component.ts:

import { Component } from '@angular/core';  
@Component({  
  selector: 'app-root',  
  templateUrl: './app.component.html',  
  styleUrls : ['./custom.css']  
})  
export class AppComponent {  
  showColor: boolean = false;  
  constructor() { }  
  public changeColor(): void {  
      this.showColor = !this.showColor;  
  }  
} 



app.component.html:

<div>  
  <h3>This is normal class allocation</h3>  
  <span class="red">Attribute Change</span><br /> 
  <span style="font-size:14px;color:pink;">Attribute Change by normal css style</span> <br/>  
  <h3>This is a Attribute Directives without dynamic showcolor</h3>  
  <span [class.red]="true">Attribute Change</span><br />  
  <span [ngClass]="{'blue':true}">Attribute Change by Using NgClass</span><br />  
  <span [ngStyle]="{'font-size':'14px','color':'green'}">Attribute Change by Using NgStyle</span>  
  <br /><br />  
  <h3>This is a Attribute Directives with dynamic showcolor</h3>  
  <span [class.cyan]="showColor">Attribute Change</span><br />  
  <span [ngClass]="{'brown':showColor}">Attribute Change by Using NgClass</span><br />  
  <input type="button" value="Change Color" (click)="changeColor()" />  
  <br /><br />  
  <span [class.cyan]="showColor">Attribute Change</span><br />  
  <span [ngClass]="{'cyan':showColor, 'red' : !showColor}">Attribute Change by Using NgClass</span><br />  
  <br />  
</div> 



custom.css:

.red {color:red;}  
.blue {color:blue}  
.cyan {color : cyan}  
.brown {color : brown} 
