chrome://flags/#allow-insecure-localhost

Hello World

Controllers: 
The Controllers folder contains class files for the controllers. 
A Controller handles users' request and returns a response. 
MVC requires the name of all controller files to end with "Controller". 



Scripts
The Scripts folder contains JavaScript or VBScript files for the application. 
MVC 5 includes javascript files for bootstrap, jquery, and modernizer by default.



Models
The Models folder contains model class files. Typically model class includes public 
properties, which will be used by the application to hold and manipulate application data.



Configuration files:
AppSettings.json
The appsettings. json file isÂ an application configuration file used to store 
configuration settings such as database connections strings, any application scope global variables, etc. 
If you open the ASP.NET Core appsettings. json file, then you see the following code by default which is 
created by visual studio.

Views
The Views folder contains HTML files for the application. 
Typically view file is a .cshtml file where you write HTML and C# or VB.NET code.
The Views folder includes a separate folder for each controller. 
For example, all the .cshtml files, which will be rendered by HomeController will be in View > Home folder.
The Shared folder under the View folder contains all the views shared among different controllers e.g., layout files.


Example1:

In Controller:

public string Index()
{
    return "Hello World";
}



Example 2:

In HomeController add post Index function:
Note if Index page was changed in previous example, change it back to render the View().

public IActionResult Index()
{
    return View();
}

public IActionResult hello()
{
    return View();
}



For adding view, rt click onn the controller function hello() -> Add View -> Razor View (Empty) -> give the name of the view as :
hello.cshtml 
note that this name should match the name of the function
A new View will be created, edit it:

Views->Home->hello.cshtml:

<h1>This is a view rendered by hello() of Home Controller</h1>

Add in Views->Home->Index.cshtml , the hyperlink to reach to the hello page:

<hr />
<h3>
    <a href="/Home/hello">Hello Page</a>
</h3>






